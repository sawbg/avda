.TH "vaso" 3 "Wed Mar 30 2016" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
vaso \- 
.PP
contains functions related to the file I/O use in this program  

.SH SYNOPSIS
.br
.PP
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBSide\fP { \fBSide::Left\fP, \fBSide::Right\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "std::string \fBCurrentDataName\fP ()"
.br
.ti -1c
.RI "std::string \fBInitialDataName\fP (auto dir)"
.br
.ti -1c
.RI "std::string \fBPatientName\fP ()"
.br
.ti -1c
.RI "\fBDataParams\fP \fBReadParams\fP (auto filename)"
.br
.ti -1c
.RI "std::string \fBWriteParams\fP (\fBDataParams\fP params, auto filename)"
.br
.ti -1c
.RI "void \fBaverage\fP (\fBfloat32\fP *data, \fBfloat32\fP *avg, \fBuint8\fP count, \fBuint32\fP size)"
.br
.ti -1c
.RI "void \fBdiff\fP (\fBfloat32\fP *data, \fBuint32\fP size)"
.br
.ti -1c
.RI "void \fBfft\fP (\fBcfloat32\fP *data, \fBuint32\fP size)"
.br
.ti -1c
.RI "void \fBmag\fP (\fBcfloat32\fP *orig, \fBfloat32\fP *newmags, \fBuint32\fP size)"
.br
.ti -1c
.RI "void \fBmax\fP (\fBfloat32\fP *data, \fBuint32\fP size)"
.br
.ti -1c
.RI "void \fBsmooth\fP (\fBfloat32\fP *data, \fBuint32\fP size, \fBuint16\fP order)"
.br
.ti -1c
.RI "void \fBplay\fP (auto filename)"
.br
.ti -1c
.RI "void * \fBprocess\fP (void *procdata)"
.br
.ti -1c
.RI "void \fBStartProcessing\fP (\fBProcData\fP procdata)"
.br
.ti -1c
.RI "void * \fBprocessing\fP (void *procdata)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const std::string \fBPATIENT_PATH\fP = '/home/pi/patients/'"
.br
.in -1c
.SH "Detailed Description"
.PP 
contains functions related to the file I/O use in this program 

contains functions related to the program's threaded processing of audio data
.PP
contains the function(s) relating to sound
.PP
contains the functions necessary to perform the mathematical operations required by this program
.PP
This namespace contains all code related to this project\&.
.PP
\fBAuthor:\fP
.RS 4
Samuel Andrew Wisner, awisner94@gmail.com
.PP
Samuel Andrew Wisner, awisner94@gmail.com 
.PP
Nicholas K\&. Nolan
.PP
Samuel Andrew Wisner, awisne94@gmail.com 
.RE
.PP

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBvaso::Side\fP\fC [strong]\fP"
The side of the head to which a recording pertains\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fILeft \fP\fP
.TP
\fB\fIRight \fP\fP
.PP
Definition at line 58 of file definitions\&.hpp\&.
.SH "Function Documentation"
.PP 
.SS "void vaso::average (\fBfloat32\fP *data, \fBfloat32\fP *avg, \fBuint8\fPcount, \fBuint32\fPsize)"
Element-wise averaging along the first dimension of a two-dimensional array\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP the two-dimensional array containing [count] number of arrays in the first dimension and [size] number of each elements in the second dimension
.br
\fIavg\fP the array of size [size] containing the averaged values of each element
.br
\fIcount\fP the number of arrays in the first dimension of data and will likely be a constant value of 3 in this program
.br
\fIsize\fP the number of elements in the second dimension of data 
.RE
.PP

.PP
Definition at line 94 of file sigmath\&.hpp\&.
.SS "std::string vaso::CurrentDataName ()"
Gets a data-based name to which the file(s) created in a session to be saved\&.
.PP
\fBReturns:\fP
.RS 4
a partial (?) filename for the current session 
.RE
.PP

.PP
Definition at line 26 of file fileio\&.hpp\&.
.SS "void vaso::diff (\fBfloat32\fP *data, \fBuint32\fPsize)"
Computes the left-handed first derivative of a discrete signal\&. The first element will be 0\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP an array containing the discrete signal data
.br
\fIsize\fP the number of elements in data 
.RE
.PP

.PP
Definition at line 98 of file sigmath\&.hpp\&.
.SS "void vaso::fft (\fBcfloat32\fP *data, \fBuint32\fPsize)"
Replaces the values of an array of cfloat32's with the array's DFT using a decimation-in-frequency algorithm\&.
.PP
This code is based on code from http://rosettacode.org/wiki/Fast_Fourier_transform#C.2B.2B\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP the array whose values should be replaced with its DFT
.br
\fIsize\fP the number of elements in the data array 
.RE
.PP

.PP
Definition at line 102 of file sigmath\&.hpp\&.
.SS "std::string vaso::InitialDataName (autodir)"
Finds the filename of the oldest (i\&.e\&., baseline) data is saved\&.
.PP
\fBParameters:\fP
.RS 4
\fIdir\fP the directory which contains all patient data
.RE
.PP
\fBReturns:\fP
.RS 4
the base (?) filename to which all baseline data was saved 
.RE
.PP

.PP
Definition at line 37 of file fileio\&.hpp\&.
.SS "void vaso::mag (\fBcfloat32\fP *orig, \fBfloat32\fP *newmags, \fBuint32\fPsize)"
Computes the magitude of an array of complex numbers\&.
.PP
\fBParameters:\fP
.RS 4
\fIorig\fP the array of complex numbers
.br
\fInewmags\fP an array to which the magitudes are to be written
.br
\fIsize\fP the number of elements in orig and newmags 
.RE
.PP

.PP
Definition at line 150 of file sigmath\&.hpp\&.
.SS "void vaso::max (\fBfloat32\fP *data, \fBuint32\fPsize)"
Finds the maximum value in an array\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP the array whose maximum value is to be found
.br
\fIuint32\fP size the number of elements in the data array 
.RE
.PP

.PP
Definition at line 154 of file sigmath\&.hpp\&.
.SS "std::string vaso::PatientName ()"
Prompts a user to enter a first, middle, and last name for a patients and creates a directory (if necessary) in which all of a patient's data can be saved\&.
.PP
Must warn a user if the patient folder does not already exist in order to prevent missaving data\&.
.PP
\fBReturns:\fP
.RS 4
the directory under which all patient data is saved 
.RE
.PP

.PP
Definition at line 51 of file fileio\&.hpp\&.
.SS "void vaso::play (autofilename)"
Plays a WAVE file in a loop in a non-blocking manner\&.
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP the absolute or relative path to the WAVE file 
.RE
.PP

.PP
Definition at line 19 of file sound\&.hpp\&.
.SS "void* vaso::process (void *procdata)"
Computes recording parameters in a separate thread in a thread-safe manner\&. AUtomatically waits for each recording to finish before processing it\&. This file is meant to be called ONLY from the StartProcessing function\&.
.PP
\fBParameters:\fP
.RS 4
\fIprocdata\fP a struct containing the values necessary to processing the audio
.RE
.PP
\fBReturns:\fP
.RS 4
a (void) pointer to a \fBDataParams\fP struct containing the computed parameters for a patient 
.RE
.PP

.SS "void* vaso::processing (void *procdata)"

.PP
Definition at line 42 of file threadproc\&.hpp\&.
.SS "\fBDataParams\fP vaso::ReadParams (autofilename)"
Reads the previously computated parameters found in the specified file\&.
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP the absolute or relative path to the file containing the patient data to read
.RE
.PP
\fBReturns:\fP
.RS 4
the patient parameters read 
.RE
.PP

.PP
Definition at line 64 of file fileio\&.hpp\&.
.SS "void vaso::smooth (\fBfloat32\fP *data, \fBuint32\fPsize, \fBuint16\fPorder)"
Applies an nth-order moving-average filter to a discrete signal\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP the array containing the signal to which the filter should be applied
.br
\fIsize\fP the number of elements in the data array
.br
\fIorder\fP the order of the filter 
.RE
.PP

.PP
Definition at line 158 of file sigmath\&.hpp\&.
.SS "void vaso::StartProcessing (\fBProcData\fPprocdata)"
Begins processing the recorded data\&. Should be called before or immediately after the first recording\&.
.PP
\fBParameters:\fP
.RS 4
\fIproxdata\fP a struct containing the values necessary to processing the audio 
.RE
.PP

.PP
Definition at line 46 of file threadproc\&.hpp\&.
.SS "std::string vaso::WriteParams (\fBDataParams\fPparams, autofilename)"
Writes the parameters to the specified file\&.
.PP
\fBParameters:\fP
.RS 4
\fIparams\fP 
.RE
.PP

.PP
Definition at line 73 of file fileio\&.hpp\&.
.SH "Variable Documentation"
.PP 
.SS "const std::string vaso::PATIENT_PATH = '/home/pi/patients/'"
Absolute path to the folder containing the patients' data 
.PP
Definition at line 18 of file fileio\&.hpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
