.TH "vaso" 3 "Mon Apr 18 2016" "Andrew and Nick's Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
vaso \- 
.PP
contains function()s related to the program's threaded processing of audio data  

.SH SYNOPSIS
.br
.PP
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBSide\fP { \fBSide::Left\fP, \fBSide::Right\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "std::string \fBPatientName\fP ()"
.br
.ti -1c
.RI "std::map< \fBSide\fP, \fBDataParams\fP > \fBReadParams\fP (auto filename)"
.br
.ti -1c
.RI "std::string \fBWriteParams\fP (\fBDataParams\fP params, auto filename)"
.br
.ti -1c
.RI "std::map< \fBSide\fP, \fBDataParams\fP > \fBProcess\fP (\fBfloat32\fP **data)"
.br
.ti -1c
.RI "\fBDataParams\fP \fBprocess\fP (\fBfloat32\fP *data, \fBuint32\fP size, \fBfloat32\fP samplingRate)"
.br
.ti -1c
.RI "void \fBabsolute\fP (\fBfloat32\fP *data, \fBuint32\fP size)"
.br
.ti -1c
.RI "\fBfloat32\fP \fBaverage\fP (\fBfloat32\fP *data, \fBuint32\fP size)"
.br
.ti -1c
.RI "\fBDataParams\fP \fBaverage\fP (\fBDataParams\fP *params, \fBuint8\fP size)"
.br
.ti -1c
.RI "void \fBaverage\fP (\fBfloat32\fP *data, \fBfloat32\fP *avg, \fBuint8\fP count, \fBuint32\fP size)"
.br
.ti -1c
.RI "void \fBdecibels\fP (\fBfloat32\fP *data, \fBuint32\fP size)"
.br
.ti -1c
.RI "void \fBdiff\fP (\fBfloat32\fP *data, \fBuint32\fP size)"
.br
.ti -1c
.RI "void \fBfft\fP (\fBcfloat32\fP *data, \fBuint32\fP size)"
.br
.ti -1c
.RI "void \fBmag\fP (\fBcfloat32\fP *orig, \fBfloat32\fP *newmags, \fBuint32\fP size)"
.br
.ti -1c
.RI "\fBMaximum\fP \fBmax\fP (\fBfloat32\fP *data, \fBuint32\fP size)"
.br
.ti -1c
.RI "void \fBsmooth\fP (\fBfloat32\fP *data, \fBuint32\fP size, \fBuint16\fP order)"
.br
.ti -1c
.RI "void \fBaverage\fP (\fBfloat32\fP **data, \fBfloat32\fP *avg, \fBuint8\fP count, \fBuint32\fP size)"
.br
.ti -1c
.RI "void \fBplay\fP (auto filename)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const std::string \fBCSV_HEADER\fP = 'Time,\fBSide\fP,Frequency,Noise Level'"
.br
.ti -1c
.RI "const std::string \fBPATIENT_PATH\fP = '/home/pi/patients/'"
.br
.in -1c
.SH "Detailed Description"
.PP 
contains function()s related to the program's threaded processing of audio data 

contains the function(s) relating to sound
.PP
This namespace contains all code related to this project\&.
.PP
\fBAuthor:\fP
.RS 4
Samuel Andrew Wisner, awisner94@gmail.com 
.RE
.PP

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBvaso::Side\fP\fC [strong]\fP"
The side of the head to which a recording pertains\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fILeft \fP\fP
.TP
\fB\fIRight \fP\fP
.PP
Definition at line 65 of file definitions\&.hpp\&.
.SH "Function Documentation"
.PP 
.SS "void vaso::absolute (\fBfloat32\fP *data, \fBuint32\fPsize)"
Ensures all elements in an array are positive\&. Note that this function replaces array elements if necessary\&. It does not populate a new array\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP the array whose elements must all be positive
.br
\fIsize\fP the number of elements in the data array 
.RE
.PP

.PP
Definition at line 141 of file sigmath\&.hpp\&.
.SS "\fBfloat32\fP vaso::average (\fBfloat32\fP *data, \fBuint32\fPsize)"
Takes the average of all elements in an array
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP the array from which to compute the average
.br
\fIsize\fP the number of elements in the data array
.RE
.PP
\fBReturns:\fP
.RS 4
the computed average 
.RE
.PP

.PP
Definition at line 147 of file sigmath\&.hpp\&.
.SS "\fBDataParams\fP vaso::average (\fBDataParams\fP *params, \fBuint8\fPsize)"
Finds the averages of the elements of an array of \fBDataParams\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fIparams\fP the \fBDataParams\fP array
.br
\fIsize\fP the number of elements in the \fBDataParams\fP array
.RE
.PP
\fBReturns:\fP
.RS 4
a \fBDataParams\fP structure containing the average values of the structure's elements in the params array 
.RE
.PP

.PP
Definition at line 158 of file sigmath\&.hpp\&.
.SS "void vaso::average (\fBfloat32\fP *data, \fBfloat32\fP *avg, \fBuint8\fPcount, \fBuint32\fPsize)"
Element-wise averaging along the first dimension of a two-dimensional array\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP the two-dimensional array containing [count] number of arrays in the first dimension and [size] number of each elements in the second dimension
.br
\fIavg\fP the array of size [size] containing the averaged values of each element
.br
\fIcount\fP the number of arrays in the first dimension of data and will likely be a constant value of 3 in this program
.br
\fIsize\fP the number of elements in the second dimension of data 
.RE
.PP

.SS "void vaso::average (\fBfloat32\fP **data, \fBfloat32\fP *avg, \fBuint8\fPcount, \fBuint32\fPsize)"

.PP
Definition at line 173 of file sigmath\&.hpp\&.
.SS "void vaso::decibels (\fBfloat32\fP *data, \fBuint32\fPsize)"
Converts an array of floats to 'power decibels', i\&.e\&., x[n] = 20*log10(x[n])\&. The decibel values are written to the same array that contained the values to be converted\&. In other words, this function should perform an in-place, element-wise conversion\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP the array of values to be converted as well as the location where the converted values will be written
.br
\fIsize\fP the number of elements in the data array 
.RE
.PP

.PP
Definition at line 189 of file sigmath\&.hpp\&.
.SS "void vaso::diff (\fBfloat32\fP *data, \fBuint32\fPsize)"
Computes the left-handed first derivative of a discrete signal\&. The first element will be 0\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP an array containing the discrete signal data
.br
\fIsize\fP the number of elements in data 
.RE
.PP

.PP
Definition at line 195 of file sigmath\&.hpp\&.
.SS "void vaso::fft (\fBcfloat32\fP *data, \fBuint32\fPsize)"
Replaces the values of an array of cfloat32's with the array's DFT using a decimation-in-frequency algorithm\&.
.PP
This code is based on code from http://rosettacode.org/wiki/Fast_Fourier_transform#C.2B.2B\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP the array whose values should be replaced with its DFT
.br
\fIsize\fP the number of elements in the data array 
.RE
.PP

.PP
Definition at line 208 of file sigmath\&.hpp\&.
.SS "void vaso::mag (\fBcfloat32\fP *orig, \fBfloat32\fP *newmags, \fBuint32\fPsize)"
Computes the magitude of an array of complex numbers\&.
.PP
\fBParameters:\fP
.RS 4
\fIorig\fP the array of complex numbers
.br
\fInewmags\fP an array to which the magitudes are to be written
.br
\fIsize\fP the number of elements in orig and newmags 
.RE
.PP

.PP
Definition at line 256 of file sigmath\&.hpp\&.
.SS "\fBMaximum\fP vaso::max (\fBfloat32\fP *data, \fBuint32\fPsize)"
Finds the maximum value in an array\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP the array whose maximum value is to be found
.br
\fIuint32\fP size the number of elements in the data array
.RE
.PP
\fBReturns:\fP
.RS 4
the maximum value and its index in a \fBMaximum\fP structure 
.RE
.PP

.PP
Definition at line 267 of file sigmath\&.hpp\&.
.SS "std::string vaso::PatientName ()"
Prompts a user to enter a first, middle, and last name for a patients and creates a file (if necessary) in which all of a patient's data can be saved\&.
.PP
Must warn a user if the patient folder does not already exist in order to prevent missaving data\&.
.PP
\fBReturns:\fP
.RS 4
the file under which all patient data is saved 
.RE
.PP

.PP
Definition at line 37 of file fileio\&.hpp\&.
.SS "void vaso::play (autofilename)"
Plays a WAVE file in a loop in a non-blocking manner\&.
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP the absolute or relative path to the WAVE file 
.RE
.PP

.PP
Definition at line 19 of file sound\&.hpp\&.
.SS "std::map<\fBSide\fP, \fBDataParams\fP> vaso::Process (\fBfloat32\fP **data)"
Processes the recorded audio\&. Meant to be run in a separate thread as the recordings are being made\&. This function assumes that the left-side recordings will be made first\&.
.PP
It should be noted that is algorithm is considered the intellectual property of Andrew Wisner and Nicholas Nolan\&. The 'algorithm' is defined as the use of 1) the frequency drop-off and/or 2) a noise value from the frequency band above the drop-off frequency in order to diagnose (with or without other factors and parameters) the presence of a vasospasm in a patient\&. By faculty members and/or students in the UAB ECE department using this algorithm, they agree that the presentation of their code or project that uses this algorithm by anyone directly or indirectly related to the code or project, whether verbally or in writing, will reference the development of the initial algorithm by Andrew Wisner and Nicholas Nolan\&. Furthermore, a failure to meet this stipulation will warrant appropriate action by Andrew Wisner and/or Nicholas Nolan\&. It should be understood that the purpose of this stipulation is not to protect prioprietary rights; rather, it is to help ensure that the intellectual property of the aforementioned is protected and is neither misrepresented nor claimed implicitly or explicitly by another individual\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP two-dimensional array (first dimension whole recordings, second dimension samples in a recording) that will contain all recorded audio
.br
\fIREC_COUNT\fP the number of recordings (left and right together) to be made
.br
\fISAMPLE_COUNT\fP the number of samples in each recording\&. MUST be a power of two\&.
.br
\fISAMPLE_FREQ\fP the sampling frequency in Hz or Samples/second
.RE
.PP
\fBReturns:\fP
.RS 4
a map of the averaged left- and right-side parameters in \fBDataParams\fP structures 
.RE
.PP

.PP
Definition at line 54 of file process\&.hpp\&.
.SS "\fBDataParams\fP vaso::process (\fBfloat32\fP *data, \fBuint32\fPsize, \fBfloat32\fPsamplingRate)"

.PP
Definition at line 117 of file process\&.hpp\&.
.SS "std::map<\fBSide\fP, \fBDataParams\fP> vaso::ReadParams (autofilename)"
Reads the previously computated parameters found in the specified file\&.
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP the absolute or relative path to the file containing the patient data to read
.RE
.PP
\fBReturns:\fP
.RS 4
the patient parameters read 
.RE
.PP

.PP
Definition at line 127 of file fileio\&.hpp\&.
.SS "void vaso::smooth (\fBfloat32\fP *data, \fBuint32\fPsize, \fBuint16\fPorder)"
Applies an nth-order moving-average filter to a discrete signal\&.
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP the array containing the signal to which the filter should be applied
.br
\fIsize\fP the number of elements in the data array
.br
\fIorder\fP the order of the filter 
.RE
.PP

.PP
Definition at line 285 of file sigmath\&.hpp\&.
.SS "std::string vaso::WriteParams (\fBDataParams\fPparams, autofilename)"
Writes the parameters to the specified file\&.
.PP
\fBParameters:\fP
.RS 4
\fIparams\fP 
.RE
.PP

.PP
Definition at line 153 of file fileio\&.hpp\&.
.SH "Variable Documentation"
.PP 
.SS "const std::string vaso::CSV_HEADER = 'Time,\fBSide\fP,Frequency,Noise Level'"
First line of CSV data file, which declares columns\&. 
.PP
Definition at line 20 of file fileio\&.hpp\&.
.SS "const std::string vaso::PATIENT_PATH = '/home/pi/patients/'"
Absolute path to the folder containing the patients' data 
.PP
Definition at line 25 of file fileio\&.hpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Andrew and Nick's Project from the source code\&.
